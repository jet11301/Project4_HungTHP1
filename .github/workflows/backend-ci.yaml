name: backend-ci

on:
  workflow_dispatch:

  pull_request:
    branches:
    - main

jobs:
  lint-job:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4 # Use the latest version
      with:
        python-version: '3.x' # Specify the desired Python version

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv  # Install pipenv

    - name: Install dependencies
      run: |
        cd starter/backend  # Change to the specific directory
        pipenv install # Adjust based on your project setup

    - name: Install flake8
      run: |
        cd starter/backend  # Change to the specific directory
        pipenv install flake8  # Install flake8 using pipenv

    - name: Run the pipenv run lint command
      run: |
        cd starter/backend  # Change to the specific directory
        pipenv run lint  # LINT JOB
  test-job:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4 # Use the latest version
      with:
        python-version: '3.x' # Specify the desired Python version

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv  # Install pipenv

    - name: Install dependencies
      run: |
        cd starter/backend  # Change to the specific directory
        pipenv install # Adjust based on your project setup

    - name: Install flake8
      run: |
        cd starter/backend  # Change to the specific directory
        pipenv install flake8  # Install flake8 using pipenv

    - name: Run the pipenv run test command
      run: |
        cd starter/backend  # Change to the specific directory
        pipenv run test  # Test JOB

  build-job:
    name: build
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1 # Specify your AWS region

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      id: login-amz-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, push image
      env:
        ECR_REGISTRY: ${{ steps.login-amz-ecr.outputs.registry }}
        ECR_REPOSITORY: "backend-movie"
        IMAGE_TAG: lastest
      run: "cd starter/backend  # Change to the specific directory\ndocker build -t backend:lastest .  # image name\ndocker tag backend:lastest $ECR_REGISTRY/$ECR_REPOSITORY:lastest\ndocker push $ECR_REGISTRY/$ECR_REPOSITORY:lastest \necho \"image=$ECR_REGISTRY/$ECR_REPOSITORY:lastest\" >> $GITHUB_OUTPUT\n"
